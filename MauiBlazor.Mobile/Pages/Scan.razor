@page "/scan"

@using MauiBlazor.Shared.Models;
@using MauiBlazor.Mobile.Data;
@using BlazorBarcodeScanner.ZXing.JS
@using MauiBlazor.Mobile.MauiPages;
@using CommunityToolkit.Maui.Core;
@using CommunityToolkit.Maui.Views;
@using MauiBlazor.Mobile.Services;

@using MauiPopup;


<style>
    .parent {
        position: relative;
        top: 0;
        left: 0;
    }

    .image1 {
        position: relative;
        top: 0;
        left: 0;
        border: 1px red solid;
    }

    .image2 {
        position: absolute;
        top: 30px;
        left: 30px;
        border: 1px green solid;
    }

    .underline-text-button {
        background-color: #C31C4B;
        border-color: #C31C4B;
        text-decoration: underline;
        text-decoration-color: blue;
    }

    .basic-button {
        background-color: #F2F2F7;
        color: #322F40;
    }

    .frame {
        background-color: #92919E;
        border-radius: 22px;
    }

    h2 {
        color: #322F40;
        font-weight: bold;
    }

    h4 {
        color: #92919E;
        font-weight: bold;
    }
</style>

@if (pageStatus == ScanPageStatus.StartScanStatus)
{
    <h1>Scan QR Code</h1>

    <div class="hstack gap-3">
        <img src="qr_preview.png" />
        <img class="image2" src="red_outliner.png" />
    </div>


    <Button class="basic-button" @onclick="OpenScanPagePopup">Scan</Button>
    <h3>Did you encounter a problem while scanning QR?</h3>
    <Button @onclick="GoToManuallyAddPage">Scan Manually</Button>

}

@if (pageStatus == ScanPageStatus.ManualScanStatus)
{
    <div class="frame">
        <h2>Enter business card id</h2>
        <h4>Please enter card id</h4>
        <InputNumber @bind-Value="@cardId" type="number" inputmode="numeric" />

    </div>
    <Button class="basic-button"  @onclick="ManuallyScanButton_Clicked" disabled="@(cardId <= 0)">Manual Scan</Button>
}
else if (pageStatus == ScanPageStatus.SuccessStatus)
{
    <div class="frame">
        <h2>Scanned Successfully</h2>
        <h4>"@cardModel.DisplayName" was scanned successfully.</h4>
    </div>
    <Button class="basic-button" @onclick="() =>GoToStartScanPage()">Ok</Button>
    <Button class="underline-text-button" @onclick="OpenScanPagePopup">Scan a new card</Button>
}



@code{

    //camera
    private string LocalBarcodeText;
    CardModel cardModel;
    int cardId;
    private void LocalReceivedBarcodeText(BarcodeReceivedEventArgs args)
    {
        this.LocalBarcodeText = args.BarcodeText;
        StateHasChanged();
    }

    enum ScanPageStatus
    {
        StartScanStatus,
        ScanStatus,
        ManualScanStatus,
        SuccessStatus,
        ErrorStatus
    };
    ScanPageStatus pageStatus = ScanPageStatus.StartScanStatus;

    private async void OpenScanPagePopup()
    {
        //Application.Current.MainPage = new ScanPage();
        //var popup = new ScanPage();
        //onNa(popup);
        //var result =await  Application.Current.MainPage.ShowPopupAsync(new MauiPages.ScanPage());
        //this.ShowPopup(new ScanPage());
        //ScanPage scanPage = new ScanPage();
        //Page current_page = Shell.Current.Navigation.NavigationStack.LastOrDefault();
        //if (current_page == null)
        //    current_page = Shell.Current.CurrentPage;
        //PopupExtensions.ShowPopup<ScanPage>(Scan, scanPage);

        //var result = this.ShowPopupAsync(new ScanPage());
        //this.ShowPopup(new ScanPage());
        PopupAction.DisplayPopup(new MauiBlazor.Mobile.MauiPages.ScanPage());

    }
    protected async void GoToManuallyAddPage()
    {
        pageStatus = ScanPageStatus.ManualScanStatus;
    }
    protected async void GoToStartScanPage()
    {
        //ResponseModel<string> responseModel = await CardService.SaveCardToUser()
        pageStatus = ScanPageStatus.StartScanStatus;
    }
    protected async void ManuallyScanButton_Clicked()
    {
        ResponseModel<string> responseModel = await CardService.SaveCardToUser(cardId);
        ResponseModel<CardModel> responseModel1 = await CardService.GetCardDetailByCardId(cardId);

        SemanticScreenReader.Announce(responseModel.Message);
        await CommunityToolkit.Maui.Alerts.Toast.Make(responseModel.Message, ToastDuration.Long, 16).Show(new CancellationTokenSource().Token);

        if (responseModel.Success && responseModel1.Success)
        {
            cardModel = responseModel1.Data;
            pageStatus = ScanPageStatus.SuccessStatus;

        }
        else
        {
            pageStatus = ScanPageStatus.ErrorStatus;
        }
    }
}