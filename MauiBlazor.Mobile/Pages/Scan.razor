@page "/scan"

@using MauiBlazor.Shared.Models;
@using MauiBlazor.Mobile.Data;
@using BlazorBarcodeScanner.ZXing.JS
@using MauiBlazor.Mobile.MauiPages;
@using CommunityToolkit.Maui.Core;
@using CommunityToolkit.Maui.Views;
@using MauiBlazor.Mobile.Services;

@using MauiPopup;


@inject LocalService localService

<style>
    .parent {
        position: relative;
        top: 0;
        left: 0;
    }



    .underline-text-button {
        text-decoration: underline;
        text-decoration-color: #C31C4B;
        color: #C31C4B;
    }

    .page-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        /*height: 100vh;*/ /* Set the height to 100% of the viewport height */
    }

    .frame {
        background-color: #EFF0F4;
        border-radius: 22px;
        padding: 20px; /* Add padding as needed */
        text-align: center;
    }

    h2 {
        color: #322F40;
        font-weight: bold;
    }

    h4 {
        color: #92919E;
        font-weight: bold;
    }
</style>

@if (pageStatus == ScanPageStatus.StartScanStatus)
{
    <div class="page-container">
        <div class="frame">
            <h3>Scan QR Code</h3>
            <h6 style="color: #92919E;">You can save that card by scanning the QR code of a card and access it later.</h6>
        </div>
        <img style="padding:35px; " src="Images/qr_preview.png" alt="Image 1" height="250">
        <Button class="basic-button" @onclick="OpenScanPagePopup">Scan</Button>
        <h6 style="padding-top:15px;">Did you encounter a problem while scanning QR?</h6>
        <Button class="underline-text-button" @onclick="GoToManuallyAddPage">
            Add your card manually<img src="Images/right_red_arrow.png" alt="Arrow" width="30" height="30" />
        </Button>




    </div>

}

@if (pageStatus == ScanPageStatus.ManualScanStatus)
{
    <div class="page-container">
        <div class="frame">
            <h3>Enter business card id</h3>
            <h6>Please enter card id</h6>
            <input type="number" id="manualId" name="manualId" placeholder="6" @bind-value="@cardId">
        </div>
        <Button class="basic-button" @onclick="ManuallyScanButton_Clicked" disabled="@(cardId <= 0)">Manual Scan</Button>

    </div>
}
else if (pageStatus == ScanPageStatus.SuccessStatus)
{
    <div class="page-container">
        <div class="frame">
            <img src="Images/ok.png" width="45" />
            <h2>Scanned Successfully</h2>
            <h4>"@cardModel.DisplayName" was scanned successfully.</h4>
        </div>
        <Button class="basic-button" @onclick="() =>GoToStartScanPage()">Ok</Button>
        <Button class="underline-text-button" @onclick="OpenScanPagePopup">
            Scan a new card <img src="Images/right_red_arrow.png" alt="Arrow" width="30" height="30" />
        </Button>
    </div>

}
else if (pageStatus == ScanPageStatus.ErrorStatus)
{

}



@code{

    //camera
    private string LocalBarcodeText;
    CardModel cardModel;
    int cardId = 6;
    private void LocalReceivedBarcodeText(BarcodeReceivedEventArgs args)
    {
        this.LocalBarcodeText = args.BarcodeText;
        StateHasChanged();
    }

    enum ScanPageStatus
    {
        StartScanStatus,
        ScanStatus,
        ManualScanStatus,
        SuccessStatus,
        ErrorStatus
    };
    ScanPageStatus pageStatus = ScanPageStatus.StartScanStatus;

    private async void OpenScanPagePopup()
    {
        //Application.Current.MainPage = new ScanPage();
        //var popup = new ScanPage();
        //onNa(popup);
        //var result =await  Application.Current.MainPage.ShowPopupAsync(new MauiPages.ScanPage());
        //this.ShowPopup(new ScanPage());
        //ScanPage scanPage = new ScanPage();
        //Page current_page = Shell.Current.Navigation.NavigationStack.LastOrDefault();
        //if (current_page == null)
        //    current_page = Shell.Current.CurrentPage;
        //PopupExtensions.ShowPopup<ScanPage>(Scan, scanPage);

        //var result = this.ShowPopupAsync(new ScanPage());
        //this.ShowPopup(new ScanPage());
        PopupAction.DisplayPopup(new MauiBlazor.Mobile.MauiPages.ScanPage());
        StateHasChanged();

    }
    protected async void GoToManuallyAddPage()
    {
        pageStatus = ScanPageStatus.ManualScanStatus;
        StateHasChanged();
    }
    protected async void GoToStartScanPage()
    {
        //ResponseModel<string> responseModel = await CardService.SaveCardToUser()
        pageStatus = ScanPageStatus.StartScanStatus;
        StateHasChanged();
    }
    protected async void ManuallyScanButton_Clicked()
    {
        //LocalService localService = new LocalService();

        //ResponseModel<string> responseModel = await CardService.SaveCardToUser(cardId);
        ResponseModel<CardModel> responseModel1 = await CardService.GetCardDetailByCardId(cardId);

        //SemanticScreenReader.Announce(responseModel.Message);
        //await CommunityToolkit.Maui.Alerts.Toast.Make(responseModel.Message, ToastDuration.Long, 16).Show(new CancellationTokenSource().Token);

        ResponseModel<string> responseModel2 = await localService.AddNewCardToLatestScanedCards(cardId);

        if (
            //responseModel.Success &&
            responseModel1.Success && responseModel2.Success)
        {
            cardModel = responseModel1.Data;
            pageStatus = ScanPageStatus.SuccessStatus;
            StateHasChanged();

        }
        else
        {
            //pageStatus = ScanPageStatus.ErrorStatus;
            //StateHasChanged();
        }
    }
}